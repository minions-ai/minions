sequenceDiagram
    actor Client
    participant MC as MinionController
    participant RHS as RequestHandlerService
    participant MS as MinionService
    participant CS as ContextService
    participant MF as MinionFactory
    participant MR as MinionRegistry
    participant CH as ContextHolder
    participant SC as SecurityContext
    participant DB as Database

    Client->>+MC: POST /v1/minions
    Note over Client,MC: CreateMinionRequest

    MC->>+RHS: createMinion(request)

    RHS->>+MS: createMinion(name, type, userId, metadata)

    MS->>MS: validateInputs()
    MS->>MS: generateMinionId()

    MS->>+MF: createMinion(id, name, type, userId)
    MF-->>-MS: minion

    MS->>+CS: createContext(minion, userId, metadata)

    CS->>+SC: getAuthentication()
    SC-->>-CS: authentication

    CS->>CS: validateAuthentication()
    CS->>CS: extractTenantId()
    CS->>CS: extractEnvironmentId()

    CS->>+CH: setContext(context)
    CH-->>-CS: void

    CS-->>-MS: context

    MS->>+MR: registerAgent(minion)
    MR->>+DB: save(minion)
    DB-->>-MR: void
    MR-->>-MS: void

    MS-->>-RHS: minion

    RHS->>RHS: createResponse()
    RHS-->>-MC: MinionResponse

    MC-->>-Client: 201 Created
    Note over Client,MC: MinionResponse