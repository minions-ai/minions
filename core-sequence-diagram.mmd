sequenceDiagram
    participant Client
    participant MCPService
    participant LLMService
    participant MCPContextManager
    participant MCPToolOrchestrator
    
    Note over Client,MCPToolOrchestrator: Request Processing Flow

    Client->>MCPService: processRequest(context, modelConfig)
    activate MCPService
    MCPService->>MCPService: validateContext(context, modelConfig)
    
    Note over MCPService: Process Model Calls
    loop For each pending model call
        MCPService->>LLMService: getCompletion(messages, modelId, parameters)
        activate LLMService
        LLMService-->>MCPService: MCPMessage response
        deactivate LLMService
        
        MCPService->>MCPContextManager: addMessage(context, response)
        activate MCPContextManager
        MCPContextManager-->>MCPService: updated context
        deactivate MCPContextManager
        
        MCPService->>MCPContextManager: addStep(context, modelStep)
        activate MCPContextManager
        MCPContextManager-->>MCPService: updated context
        deactivate MCPContextManager
    end

    Note over MCPService: Process Tool Calls
    loop For each pending tool call
        MCPService->>MCPToolOrchestrator: executeTool(MCPToolCall, context)
        activate MCPToolOrchestrator
        MCPToolOrchestrator->>MCPToolOrchestrator: validateToolCall(MCPToolCall)
        
        alt Tool execution successful
            MCPToolOrchestrator->>MCPToolOrchestrator: tool.execute(parameters)
            MCPToolOrchestrator-->>MCPService: updated context
        else Tool execution failed
            MCPToolOrchestrator->>MCPToolOrchestrator: setError(errorMessage)
            MCPToolOrchestrator-->>MCPService: error context
        end
        deactivate MCPToolOrchestrator
        
        MCPService->>MCPContextManager: addStep(context, toolStep)
        activate MCPContextManager
        MCPContextManager-->>MCPService: updated context
        deactivate MCPContextManager
    end
    
    MCPService-->>Client: updated context
    deactivate MCPService

    Note over Client,MCPToolOrchestrator: Tool Registration Flow
    
    Client->>MCPToolOrchestrator: registerTool(name, description, parameters, executor)
    activate MCPToolOrchestrator
    MCPToolOrchestrator->>MCPToolOrchestrator: validate tool parameters
    MCPToolOrchestrator->>MCPToolOrchestrator: create RegisteredTool
    MCPToolOrchestrator-->>Client: tool registered
    deactivate MCPToolOrchestrator

    Note over Client,MCPToolOrchestrator: Context Management Flow
    
    Client->>MCPContextManager: validateTokenLimit(context, maxTokens)
    activate MCPContextManager
    MCPContextManager->>MCPContextManager: getCurrentTokenCount(context)
    alt Token limit exceeded
        MCPContextManager-->>Client: throw IllegalStateException
    else Token limit ok
        MCPContextManager-->>Client: validation passed
    end
    deactivate MCPContextManager
    
    Client->>MCPContextManager: optimizeContext(context, maxTokens)
    activate MCPContextManager
    MCPContextManager->>MCPContextManager: summarizeContext(context)
    MCPContextManager-->>Client: optimized context
    deactivate MCPContextManager 