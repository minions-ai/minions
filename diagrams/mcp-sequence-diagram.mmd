---
title: MCP Agent Execution Sequence Diagram (Full Method Calls)
---

sequenceDiagram
    participant Agent as AgentExecutor
    participant Context as MCPContext
    participant StepMgr as StepManager
    participant Step as MCPStep/DefaultMCPStep
    participant StepExec as StepExecutor
    participant ModelExec as ModelCallExecutor
    participant ToolExec as MCPToolCallExecutor

    Agent->>Context: getCurrentStep()
    Context->>StepMgr: getCurrentStep()
    Agent->>StepExec: new StepExecutor(step, context)
    Agent->>StepExec: execute()
    StepExec->>StepExec: doExecute()
    StepExec->>Step: createInitialModelCall()
    StepExec->>StepExec: prepareStepExecution(step)
    StepExec->>ModelExec: ModelCallExecutor.forCall(modelCall, context)
    StepExec->>ModelExec: execute()
    ModelExec->>ModelExec: preparePromptAndOptions()
    ModelExec->>ModelExec: callModel(prompt)
    ModelExec->>ModelExec: extractAndSetToolCalls(chatResponse)
    ModelExec->>ModelExec: convertStepInstruction(chatResponse)
    ModelExec->>Context: addInstruction(stepInstruction)
    ModelExec->>ModelExec: extractMessages(chatResponse)
    ModelExec->>ModelExec: updateChatMemory(messageList)
    ModelExec->>ModelExec: buildModelCallResponse(messageList)
    ModelExec->>ModelExec: finalizeModelCall(response)
    StepExec->>StepExec: handleInstructionsAndCheckComplete(context, mcpModelCallResponse, execution)
    StepExec->>StepExec: executeToolCalls(toolCalls, step)
    alt Sequential tool calls
        StepExec->>ToolExec: MCPToolCallExecutor.forCall(toolCall, context)
        StepExec->>ToolExec: execute()
        ToolExec->>ToolExec: (tool execution logic)
    else Parallel tool calls
        StepExec->>ToolExec: MCPToolCallExecutor.forCall(toolCall, context) (async)
        StepExec->>ToolExec: execute()
        ToolExec->>ToolExec: (tool execution logic)
    end
    StepExec->>Step: createFollowUpModelCall(currentModelCall, executedToolCalls)
    StepExec->>StepExec: finalizeStepExecution(execution, step, modelCallCount, stepComplete)
    StepExec->>Context: advanceToNextStep()
    Context->>StepMgr: advanceToNextStep()
    Note over Agent,StepExec: Loop continues until workflowComplete or no more steps 