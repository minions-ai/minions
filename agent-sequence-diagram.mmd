sequenceDiagram
    participant Client
    participant AgentService
    participant AgentRecipeRepository
    participant MCPContext
    participant ModelCallExecutionContext
    participant ToolCallExecutionContext
    participant AgentExecutor
    participant StepExecutor
    participant ModelCallExecutor
    participant ToolCallExecutor
    participant ChatMemoryRepository
    participant ChatModel
    participant ToolCallingManager


    Client->>AgentService: runAgent(recipe)
    
    AgentService->>AgentService: createChatModel(recipe.modelConfig)
    activate AgentService
    AgentService->>ChatModel: new OpenAiChatModel()
    ChatModel-->>AgentService: chatModel
    deactivate AgentService
    
    AgentService->>AgentService: createAgentContext(recipe)
    activate AgentService
    AgentService->>MCPContext: new MCPContext(recipe.id, recipe.modelConfig)
    MCPContext-->>AgentService: agentContext
    AgentService->>MCPContext: addSystemPrompt(recipe.systemPrompt)
    deactivate AgentService
    
    AgentService->>AgentService: createModelContext(recipe.id, chatModel, recipe)
    activate AgentService
    AgentService->>ModelCallExecutionContext: builder().chatModel(chatModel).chatMemory(recipe.memoryRepository)...build()
    ModelCallExecutionContext-->>AgentService: modelContext
    deactivate AgentService
    
    AgentService->>AgentService: createToolContext(recipe, chatModel)
    activate AgentService
    AgentService->>ToolCallExecutionContext: builder().chatModel(chatModel).chatMemory(recipe.memoryRepository)...build()
    ToolCallExecutionContext-->>AgentService: toolContext
    deactivate AgentService
    
    loop For each step in recipe.getSteps()
        AgentService->>MCPContext: step.setContext(agentContext)
    end
    
    AgentService->>AgentExecutor: new AgentExecutor(recipe, modelContext, toolContext)
    AgentService->>AgentExecutor: executeSync()
    
    activate AgentExecutor
    loop For each step in recipe.getSteps()
        AgentExecutor->>StepExecutor: new StepExecutor(step, modelContext, toolContext)
        AgentExecutor->>StepExecutor: execute()
        
        activate StepExecutor
        StepExecutor->>StepExecutor: handleInitialModelCall()
        
        StepExecutor->>ModelCallExecutor: execute()
        activate ModelCallExecutor
        ModelCallExecutor->>ChatMemoryRepository: add(conversationId, messages)
        ModelCallExecutor->>ChatModel: call(prompt)
        ChatModel-->>ModelCallExecutor: response
        ModelCallExecutor->>ChatMemoryRepository: add(conversationId, response)
        ModelCallExecutor-->>StepExecutor: MCPModelCall (with tool calls)
        deactivate ModelCallExecutor
        
        loop While !group.isComplete() && execution.requiresMoreCalls()
            alt has tool calls
                StepExecutor->>StepExecutor: handleToolCalls()
                loop For each pending tool call
                    StepExecutor->>ToolCallExecutor: execute()
                    activate ToolCallExecutor
                    ToolCallExecutor->>ChatMemoryRepository: add(conversationId, toolCall)
                    ToolCallExecutor->>ToolCallingManager: executeTool()
                    ToolCallingManager-->>ToolCallExecutor: result
                    ToolCallExecutor->>ChatMemoryRepository: add(conversationId, result)
                    ToolCallExecutor-->>StepExecutor: MCPToolCall (with result)
                    deactivate ToolCallExecutor
                end
                
                StepExecutor->>StepExecutor: handleFollowUpModelCall()
                StepExecutor->>ModelCallExecutor: execute()
                activate ModelCallExecutor
                ModelCallExecutor->>ChatMemoryRepository: add(conversationId, messages)
                ModelCallExecutor->>ChatModel: call(prompt)
                ChatModel-->>ModelCallExecutor: response
                ModelCallExecutor->>ChatMemoryRepository: add(conversationId, response)
                ModelCallExecutor-->>StepExecutor: MCPModelCall
                deactivate ModelCallExecutor
            end
        end
        
        StepExecutor-->>AgentExecutor: StepExecution
        deactivate StepExecutor
    end
    
    AgentExecutor-->>AgentService: AgentResult
    deactivate AgentExecutor
    
    AgentService-->>Client: AgentResult 